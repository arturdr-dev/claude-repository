#!/bin/bash
# ‚òÅÔ∏è Oracle Cloud Free Tier Setup Script
# Guia completo para configurar VPS Oracle com MCPDog

echo "‚òÅÔ∏è ORACLE CLOUD FREE TIER - SETUP COMPLETO"
echo "========================================"
echo ""

# Cores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_header() {
    echo -e "${CYAN}üîß $1${NC}"
}

case "${1:-help}" in
    "guide")
        log_header "GUIA COMPLETO - ORACLE CLOUD FREE Tier"
        echo ""

        echo "üìã **PASSO 1: CRIAR CONTA ORACLE CLOUD**"
        echo "   1. Acesse: https://www.oracle.com/cloud/free/"
        echo "   2. Clique em 'Try for Free'"
        echo "   3. Preencha formul√°rio (use email real)";
        echo "   4. Adicione cart√£o de cr√©dito (n√£o ser√° cobrado no free tier)"
        echo "   5. Aguarde aprova√ß√£o (geralmente instant√¢nea)"
        echo ""

        echo "üìã **PASSO 2: CRIAR VPS (VM Instance)**"
        echo "   1. Fa√ßa login no Oracle Cloud Console"
        echo "   2. V√° para: Compute ‚Üí Instances ‚Üí Create Instance"
        echo "   3. Configure:"
        echo "      ‚Ä¢ Name: mcpdog-server"
        echo "      ‚Ä¢ Compartment: Seu compartment (padr√£o funciona)"
        echo "      ‚Ä¢ Placement: Availability Domain (qualquer um)"
        echo "      ‚Ä¢ Image: Oracle Linux 8 (ou Ubuntu 22.04)"
        echo "      ‚Ä¢ Shape: VM.Standard.A1.Flex"
        echo "      ‚Ä¢ OCPU count: 4"
        echo "      ‚Ä¢ Memory (GB): 24"
        echo "      ‚Ä¢ Boot volume: 50 GB (padr√£o)"
        echo "      ‚Ä¢ SSH Keys: Adicione sua chave SSH p√∫blica"
        echo "      ‚Ä¢ VCN: Create new VCN (padr√£o)"
        echo "      ‚Ä¢ Subnet: Public subnet (para acesso SSH)"
        echo "   4. Clique em 'Create'"
        echo ""

        echo "üìã **PASSO 3: CONFIGURAR REDE E SEGURAN√áA**"
        echo "   1. Ap√≥s criar a VM, anote o IP P√∫blico (Public IP)"
        echo "   2. V√° para: Networking ‚Üí Virtual Cloud Networks"
        echo "   3. Selecione sua VNC ‚Üí Security Lists ‚Üí Default Security List"
        echo "   4. Adicione regras de ingress:"
        echo "      ‚Ä¢ Porta 22 (SSH): 0.0.0.0/0"
        echo "      ‚Ä¢ Porta 38881 (MCPDog Web): 0.0.0.0/0"
        echo "      ‚Ä¢ Porta 8080 (HTTP API): 0.0.0.0/0"
        echo "      ‚Ä¢ Porta 443 (HTTPS): 0.0.0.0/0"
        echo ""

        echo "üìã **PASSO 4: ACESSAR VIA SSH**"
        echo "   1. Obtenha o IP P√∫blico da VM (Console ‚Üí Compute ‚Üí Instances)"
        echo "   2. Conecte via SSH:"
        echo "      ssh -i sua-chave-privada.pem opc@SEU_IP_PUBLICO"
        echo "   3. Se usar Ubuntu, usu√°rio √© 'ubuntu'"
        echo "   4. Se usar Oracle Linux, usu√°rio √© 'opc'"
        echo ""

        echo "üìã **PASSO 5: INSTALAR DEPEND√äNCIAS**"
        echo "   Execute os comandos abaixo na VPS via SSH:"
        echo ""
        echo "   # Atualizar sistema"
        echo "   sudo apt update && sudo apt upgrade -y  # Ubuntu"
        echo "   # sudo yum update -y                    # Oracle Linux"
        echo ""
        echo "   # Instalar Node.js 18+"
        echo "   curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -"
        echo "   sudo apt-get install -y nodejs"
        echo ""
        echo "   # Instalar Python 3.10+"
        echo "   sudo apt install -y python3.10 python3.10-venv python3.10-dev"
        echo "   sudo apt install -y build-essential"
        echo ""
        echo "   # Instalar Git"
        echo "   sudo apt install -y git"
        echo ""
        echo "   # Instalar Docker (opcional, para container MCPs)"
        echo "   curl -fsSL https://get.docker.com | sudo sh"
        echo "   sudo usermod -aG docker \$USER"
        echo ""

        echo "üìã **PASSO 6: INSTALAR MCPDOG**"
        echo "   # Clonar MCPDog"
        echo "   cd /opt"
        echo "   sudo git clone https://github.com/seu-repo-mcpdog.git mcpdog"
        echo "   sudo chown -R \$USER:\$USER mcpdog"
        echo "   cd mcpdog"
        echo ""
        echo "   # Instalar depend√™ncias Node.js"
        echo "   npm install"
        echo ""
        echo "   # Instalar depend√™ncias Python"
        echo "   python3 -m venv venv"
        echo "   source venv/bin/activate"
        echo "   pip install -r requirements.txt"
        echo ""

        echo "üìã **PASSO 7: CONFIGURAR MCPDOG**"
        echo "   # Copiar configura√ß√£o"
        echo "   cp config/mcpdog.config.json.example config/mcpdog.config.json"
        echo ""
        echo "   # Editar configura√ß√£o com suas API keys"
        echo "   nano config/mcpdog.config.json"
        echo ""
        echo "   # Configurar daemon systemd"
        echo "   sudo cp scripts/mcpdog.service /etc/systemd/system/"
        echo "   sudo systemctl daemon-reload"
        echo "   sudo systemctl enable mcpdog"
        echo "   sudo systemctl start mcpdog"
        echo ""

        echo "üìã **PASSO 8: COPIAR CONFIGURA√á√ÉO EXISTENTE**"
        echo "   # Da sua m√°quina local, copie a configura√ß√£o atual:"
        echo "   scp ~/.config/mcpdog/mcpdog.config.json opc@SEU_IP_PUBLICO:/opt/mcpdog/config/"
        echo ""
        echo "   # Copie tamb√©m os scripts e servidores:"
        echo "   scp -r ~/.config/mcpdog/scripts/ opc@SEU_IP_PUBLICO:/opt/mcpdog/"
        echo "   scp -r ~/.config/mcpdog/servers/ opc@SEU_IP_PUBLICO:/opt/mcpdog/"
        echo ""

        echo "üìã **PASSO 9: TESTAR FUNCIONAMENTO**"
        echo "   # Verificar status do MCPDog"
        echo "   mcpdog daemon status"
        echo ""
        echo "   # Verificar MCPs ativos"
        echo "   mcpdog list"
        echo ""
        echo "   # Iniciar dashboard web"
        echo "   mcpdog start --web-port 38881"
        echo ""
        echo "   # Acessar dashboard: http://SEU_IP_PUBLICO:38881"
        echo ""

        echo "üéØ **RECURSOS DO FREE TIER:**"
        echo "   ‚Ä¢ Compute: 4 OCPU, 24GB RAM (perp√©tuo)"
        echo "   ‚Ä¢ Storage: 200GB (block storage)"
        echo "   ‚Ä¢ Network: 10TBÂ∏¶ÂÆΩ (bandwidth)"
        echo "   ‚Ä¢ Databases: 2 Autonomous Database (20GB cada)"
        echo "   ‚Ä¢ Load Balancer: 1"
        echo "   ‚Ä¢ Monitoring: Metrics, Alerts, Logging"
        echo ""

        echo "‚ö†Ô∏è  **IMPORTANTES:**"
        echo "   ‚Ä¢ N√£o esque√ßa de configurar Security Lists (firewall)"
        echo "   ‚Ä¢ Mantenha backup da sua chave SSH"
        echo "   ‚Ä¢ Monitore uso de recursos para n√£o exceder limits"
        echo "   ‚Ä¢ Configure backups autom√°ticos"
        echo ""

        echo "‚ú® **Resultado Final:**"
        echo "   üöÄ VPS Oracle com 150+ ferramentas MCP"
        echo "   üí∞ Custo: R$ 0,00 (Free Tier)"
        echo "   ‚ö° Performance: 4 OCPU + 24GB RAM"
        echo "   üåê Acesso global via HTTP"
        echo ""

        echo "üìû **Suporte:**"
        echo "   ‚Ä¢ Oracle Cloud: 24/7 support no free tier"
        echo "   ‚Ä¢ Documenta√ß√£o: https://docs.oracle.com/"
        echo "   ‚Ä¢ Community: Oracle forums e Stack Overflow"
        ;;

    "generate-ssh")
        log_header "GERANDO CHAVE SSH PARA ORACLE CLOUD"
        echo ""

        log_info "Criando nova chave SSH para acesso √† VPS..."

        # Criar diret√≥rio .ssh se n√£o existir
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh

        # Gerar chave SSH
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/oracle_cloud_key -N "" -C "oracle-cloud-mcpdog"

        log_success "Chave SSH gerada!"
        echo ""
        echo "üìÅ **Arquivos criados:**"
        echo "   üîë Chave privada: ~/.ssh/oracle_cloud_key"
        echo "   üìã Chave p√∫blica: ~/.ssh/oracle_cloud_key.pub"
        echo ""
        echo "üìã **Conte√∫do da chave p√∫blica (copie para Oracle Cloud):**"
        echo ""
        cat ~/.ssh/oracle_cloud_key.pub
        echo ""
        echo "üìù **Como usar:**"
        echo "   1. Copie a chave p√∫blica acima"
        echo "   2. No Oracle Cloud Console ‚Üí Compute ‚Üí Create Instance"
        echo "   3. Em 'SSH Keys', cole a chave p√∫blica"
        echo "   4. Para acessar a VM: ssh -i ~/.ssh/oracle_cloud_key opc@IP_PUBLICO"
        echo ""
        log_warning "Guarde sua chave privada em local seguro!"
        ;;

    "check-requirements")
        log_header "VERIFICANDO REQUISITOS LOCAIS"
        echo ""

        # Verificar se tem chave SSH
        if [ -f ~/.ssh/oracle_cloud_key ]; then
            log_success "Chave SSH Oracle encontrada"
        else
            log_warning "Chave SSH Oracle n√£o encontrada"
            echo "   Execute: $0 generate-ssh"
        fi

        # Verificar se tem scp para copiar configura√ß√£o
        if command -v scp >/dev/null 2>&1; then
            log_success "SCP dispon√≠vel para transfer√™ncia de arquivos"
        else
            log_warning "SCP n√£o encontrado. Instale OpenSSH client"
        fi

        # Verificar configura√ß√£o MCPDog local
        if [ -f ~/.config/mcpdog/mcpdog.config.json ]; then
            log_success "Configura√ß√£o MCPDog local encontrada"
            MCP_COUNT=$(python3 -c "import json; print(len(json.load(open('/home/arturdr/.config/mcpdog/mcpdog.config.json')).get('servers', {})))" 2>/dev/null || echo "?")
            echo "   üìä MCPs configurados: $MCP_COUNT"
        else
            log_warning "Configura√ß√£o MCPDog local n√£o encontrada"
        fi

        echo ""
        log_info "Pr√≥ximos passos:"
        echo "   1. $0 guide - Seguir guia completo"
        echo "   2. Criar conta Oracle Cloud"
        echo "   3. Provisionar VPS"
        echo "   4. Instalar MCPDog na VPS"
        echo "   5. Copiar configura√ß√£o existente"
        ;;

    "copy-config-to-vps")
        log_header "COPIANDO CONFIGURA√á√ÉO MCPDOG PARA VPS"
        echo ""

        if [ -z "$2" ]; then
            log_error "Forne√ßa o IP da VPS: $0 copy-config-to-vps SEU_IP_PUBLICO"
            exit 1
        fi

        VPS_IP="$2"
        SSH_KEY="~/.ssh/oracle_cloud_key"

        log_info "Copiando configura√ß√£o para VPS: $VPS_IP"

        # Testar conex√£o
        if ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o StrictHostKeyChecking=no opc@"$VPS_IP" "echo 'SSH connection OK'" 2>/dev/null; then
            log_success "Conex√£o SSH estabelecida"
        else
            log_error "Falha na conex√£o SSH com a VPS"
            echo "   Verifique:"
            echo "   ‚Ä¢ IP p√∫blico est√° correto: $VPS_IP"
            echo "   ‚Ä¢ Security Lists permitem porta 22"
            echo "   ‚Ä¢ Chave SSH est√° correta"
            echo "   ‚Ä¢ VM est√° rodando"
            exit 1
        fi

        # Criar diret√≥rios na VPS
        log_info "Criando estrutura de diret√≥rios na VPS..."
        ssh -i "$SSH_KEY" opc@"$VPS_IP" "sudo mkdir -p /opt/mcpdog/{config,servers,scripts,logs} && sudo chown -R opc:opc /opt/mcpdog"

        # Copiar configura√ß√£o
        log_info "Copiando arquivos de configura√ß√£o..."
        scp -i "$SSH_KEY" ~/.config/mcpdog/mcpdog.config.json opc@"$VPS_IP":/opt/mcpdog/config/
        scp -i "$SSH_KEY" ~/.config/mcpdog/.npmrc opc@"$VPS_IP":/opt/mcpdog/ 2>/dev/null || true

        # Copiar scripts importantes
        if [ -d ~/.config/mcpdog/scripts ]; then
            scp -i "$SSH_KEY" -r ~/.config/mcpdog/scripts/ opc@"$VPS_IP":/opt/mcpdog/
        fi

        # Copiar servidores MCP
        if [ -d ~/.config/mcpdog/servers ]; then
            scp -i "$SSH_KEY" -r ~/.config/mcpdog/servers/ opc@"$VPS_IP":/opt/mcpdog/
        fi

        log_success "Configura√ß√£o copiada para VPS!"
        echo ""
        log_info "Pr√≥ximos passos na VPS:"
        echo "   1. SSH para VPS: ssh -i $SSH_KEY opc@$VPS_IP"
        echo "   2. cd /opt/mcpdog"
        echo "   3. npm install"
        echo "   4. python3 -m venv venv && source venv/bin/activate"
        echo "   5. pip install -r requirements.txt"
        echo "   6. mcpdog daemon start"
        ;;

    "test-vps")
        log_header "TESTANDO CONEX√ÉO COM VPS ORACLE"
        echo ""

        if [ -z "$2" ]; then
            log_error "Forne√ßa o IP da VPS: $0 test-vps SEU_IP_PUBLICO"
            exit 1
        fi

        VPS_IP="$2"
        SSH_KEY="~/.ssh/oracle_cloud_key"

        log_info "Testando conectividade com VPS: $VPS_IP"

        # Testar ping
        if ping -c 3 "$VPS_IP" >/dev/null 2>&1; then
            log_success "VPS responde ao ping"
        else
            log_error "VPS n√£o responde ao ping"
            exit 1
        fi

        # Testar porta SSH
        if nc -zv "$VPS_IP" 22 2>&1 | grep -q "succeeded"; then
            log_success "Porta SSH (22) est√° aberta"
        else
            log_error "Porta SSH (22) n√£o est√° acess√≠vel"
            echo "   Verifique Security Lists no Oracle Cloud"
            exit 1
        fi

        # Testar conex√£o SSH
        if ssh -i "$SSH_KEY" -o ConnectTimeout=5 -o StrictHostKeyChecking=no opc@"$VPS_IP" "whoami && echo 'Uptime:' && uptime" 2>/dev/null; then
            log_success "Conex√£o SSH funcional"
        else
            log_error "Falha na conex√£o SSH"
            exit 1
        fi

        log_success "Todos os testes de conectividade passaram!"
        echo ""
        log_info "VPS est√° pronta para configura√ß√£o do MCPDog"
        echo "   Execute: $0 copy-config-to-vps $VPS_IP"
        ;;

    "help"|"-h"|"--help")
        echo "‚òÅÔ∏è Oracle Cloud Free Tier Setup"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  guide               - Guia completo passo a passo"
        echo "  generate-ssh        - Gerar chave SSH para Oracle Cloud"
        echo "  check-requirements  - Verificar requisitos locais"
        echo "  copy-config-to-vps IP - Copiar configura√ß√£o MCPDog para VPS"
        echo "  test-vps IP         - Testar conectividade com VPS"
        echo "  help                - Mostrar esta ajuda"
        echo ""
        echo "Fluxo recomendado:"
        echo "  1. $0 generate-ssh        # Gerar chave SSH"
        echo "  2. $0 guide               # Seguir guia para criar VPS"
        echo "  3. $0 test-vps IP         # Testar conex√£o com VPS"
        echo "  4. $0 copy-config-to-vps IP # Copiar configura√ß√£o"
        echo ""
        echo "Requisitos:"
        echo "  ‚Ä¢ Conta Oracle Cloud (Free Tier)"
        echo "  ‚Ä¢ Chave SSH configurada"
        echo "  ‚Ä¢ Configura√ß√£o MCPDog local"
        ;;

    *)
        log_warning "Comando desconhecido: $1"
        $0 help
        exit 1
        ;;
esac

echo ""
log_success "Opera√ß√£o conclu√≠da! ‚ú®"