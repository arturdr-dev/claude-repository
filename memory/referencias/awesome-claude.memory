# üöÄ Awesome Claude Code Resources

**Tipo:** Memory Document
**Prioridade:** Alta
**Fonte:** https://github.com/hesreallyhim/awesome-claude-code
**Contexto:** Recursos curados para maximizar produtividade com Claude Code CLI

---

## üéØ Agent Skills (v2.0.20+)

### **O que s√£o:**
Configura√ß√µes controladas por modelo que permitem ao Claude Code realizar tarefas especializadas que exigem conhecimento ou capacidades espec√≠ficas.

### **Funcionalidades:**
- **Model-controlled configurations** - Configura√ß√µes controladas pelo modelo
- **Specialized tasks** - Tarefas especializadas
- **Knowledge integration** - Integra√ß√£o de conhecimento espec√≠fico
- **Capability enhancement** - Melhoria de capacidades

### **Como usar:**
```bash
# Listar skills dispon√≠veis
/skill list

# Usar skill espec√≠fico
/skill use <skill-name>

# Criar skill personalizado
/skill create <skill-name>
```

---

## üîÑ Workflows & Metodologias

### **AB Method**
**Descri√ß√£o:** Workflow principiado e orientado por especifica√ß√µes que transforma grandes problemas em miss√µes incrementais focadas.

**Componentes:**
- **Slash commands** - Comandos especializados
- **Sub agents** - Sub-agentes especializados
- **SDLC workflows** - Fluxos para diferentes fases do ciclo de vida

**Uso:** Ideal para grandes projetos que precisam ser divididos em miss√µes gerenci√°veis.

### **RIPER Workflow**
**Descri√ß√£o:** Workflow de desenvolvimento estruturado com separa√ß√£o clara entre fases.

**Fases:**
- **R**esearch - Pesquisa
- **I**nnovate - Inova√ß√£o
- **P**lan - Planejamento
- **E**xecute - Execu√ß√£o
- **R**eview - Revis√£o

**Features:**
- **Consolidated subagents** - Sub-agentes consolidados para efici√™ncia
- **Branch-aware memory bank** - Banco de mem√≥ria consciente de branches
- **Strict mode enforcement** - Modo estrito enforced

### **Context Priming**
**Descri√ß√£o:** Abordagem sistem√°tica para priming do Claude Code com contexto abrangente do projeto.

**Aplica√ß√µes:**
- **Project scenarios** - Diferentes cen√°rios de projeto
- **Development contexts** - Contextos de desenvolvimento variados
- **Specialized commands** - Comandos especializados

---

## üõ†Ô∏è Tooling & Ferramentas

### **cc-tools**
- **Descri√ß√£o:** Implementa√ß√£o em Go de alta performance
- **Features:** Smart linting integrado
- **Linguagem:** Go

### **claudekit**
- **Descri√ß√£o:** CLI toolkit abrangente
- **Features:** Checkpointing + 20+ subagents
- **Capacidades:** Extensivo kit de ferramentas

### **ContextKit**
- **Descri√ß√£o:** Framework de metodologia de planejamento
- **Estrutura:** 4 fases de planejamento
- **Objetivo:** Metodologia estruturada

### **cchistory**
- **Descri√ß√£o:** Command para hist√≥rico de sess√µes
- **Funcionalidade:** Visualizar conversas anteriores

### **cclogviewer**
- **Descri√ß√£o:** Utilit√°rio HTML para visualizar arquivos de conversa√ß√£o
- **Formato:** Interface web para logs

---

## ‚ö° Slash Commands (Categorias)

### **Linux Desktop Commands**
- **Hardware benchmarking** - Testes de performance de hardware
- **Filesystem organization** - Organiza√ß√£o de sistema de arquivos

### **Version Control & Git**
- **Specialized Git operations** - Opera√ß√µes Git especializadas
- **Branch management** - Gest√£o de branches

### **Code Analysis & Testing**
- **Quality assessment tools** - Ferramentas de avalia√ß√£o de qualidade
- **Automated testing** - Testes automatizados

### **CI/Deployment**
- **Automated workflow commands** - Comandos de workflow automatizados
- **Pipeline integration** - Integra√ß√£o com pipelines

### **Project Management**
- **Task tracking** - Acompanhamento de tarefas
- **Milestone management** - Gest√£o de marcos

---

## üìã CLAUDE.md Files (Configura√ß√µes)

### **Language-Specific**
- Configura√ß√µes otimizadas para linguagens de programa√ß√£o espec√≠ficas
- Templates para diferentes ecossistemas

### **Domain-Specific**
- Setups especializados para diferentes ind√∫strias
- Configura√ß√µes por dom√≠nio de aplica√ß√£o

### **Project Scaffolding & MCP**
- Template configurations - Configura√ß√µes template
- MCP servers - Servidores MCP personalizados

---

## üîß Como Usar Estes Recursos

### **Integra√ß√£o com Projetos:**
1. **Import skills** relevantes para seu dom√≠nio
2. **Configure workflows** (AB Method, RIPER)
3. **Use slash commands** para automa√ß√£o
4. **Adapte CLAUDE.md** com templates espec√≠ficos

### **Best Practices:**
- **Context priming** antes de sess√µes complexas
- **Workflows estruturados** para grandes projetos
- **Skills especializadas** para tarefas repetitivas
- **Tooling integrado** para produtividade

### **Commands √öteis:**
```bash
# Explorar configura√ß√µes
ccexp

# Hist√≥rico de sess√µes
cchistory

# Visualizar logs
cclogviewer

# Templates e scaffolding
claudekit --template <nome>
```

---

## üìö Documenta√ß√£o Oficial

- **Claude Code Documentation** - Guias e refer√™ncias oficiais
- **Agent Skills Documentation** - Documenta√ß√£o do novo feature set
- **Configuration Guides** - Setup e instru√ß√µes de customiza√ß√£o

---

*√öltima atualiza√ß√£o: Baseado no reposit√≥rio awesome-claude-code*
*Recomenda√ß√£o: Import este memory no CLAUDE.md para acesso r√°pido durante sess√µes*